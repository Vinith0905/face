import numpy as np
import cv2

face_detector= cv2.CascadeClassifier('C:/Users/rajugopoju/Downloads/smile_detection-master (1)/smile_detection-master/haarcascade_frontalface_default.xml')
smile_detector= cv2.CascadeClassifier('C:/Users/rajugopoju/Downloads/smile_detection-master (1)/smile_detection-master/haarcascade_smile.xml')

webcam=cv2.VideoCapture(0)
while True:
    successful_frame_read,frame=webcam.read()
    if not successful_frame_read:
        break
    # Change to gray scale
    frame_grayscale=cv2.cvtColor(frame,cv2.COLOR_BGR2GRAY)

    #Detect faces first
    faces=face_detector.detectMultiScale(frame_grayscale)
    

    #run smile detection within each of those faces
    for (x, y, w, h) in faces:
        #Draw a rectangle
        cv2.rectangle(frame, (x, y),(x+w, y+h),(100,200,50),4)

        # Get the sub frame
        the_face = frame[y:y+h: , x:x+w:]
        
        # Change to gray scale
        face_grayscale=cv2.cvtColor(the_face,cv2.COLOR_BGR2GRAY)


        smiles=smile_detector.detectMultiScale(face_grayscale,scaleFactor=1.7, minNeighbors=20)
        #find all smile in th face
        for (x_, y_,w_, h_) in smiles:
            cv2.rectangle(the_face, (x_, y_),(x_+w_, y_+h_),(50,50,200),4)


        # label the face
        if len(smiles)>0:
                cv2.putText(frame,"Smiling",(x, y+h+40), fontScale=3,
                fontFace=cv2.FONT_HERSHEY_PLAIN, color=(0, 255,0))
            

    cv2.imshow('Smile Detector', frame)

    cv2.waitKey(1)
webcam.release()
cv2.destroyAllWindows()
